n=int(input("enter number of roll numbers\t"))
s=[]
for i in range(n):
    r=int(input(f"enter roll numbers of \t"))
    s.append(r)


def linearsearch(a, k):
  
    for i in range(n):
  
        if a[i]== k:
           return i
            
    return -1
  
    
def sentinelsearch(lst, target):
    size = len(lst)
    lst.append(target)
    i = 0
    while(lst[i] != target):
        i += 1
    if(i == size):
        return None
    else:
        return i
def binarysearch(arr, x):
    low = 0
    high = len(arr)- 1
    mid = 0
 
    while low <= high:
 
        mid = (high + low)// 2
        if arr[mid]<x:
            low = mid + 1
        elif arr[mid] > x:
            high = mid - 1
        else:
            return mid
    return -1
def fibsearch(arr,key):
    b=0
    a=1
    f=b+a
    while(f<n):
        b=a
        a=f
        f=b+a
    offset=-1
    while(f>1):
        i=min(offset+b,n-1)
        if(arr[i]<key):
            f=a
            a=b
            b=f-a
            offset=i
        elif(arr[i]>key):
            f=b
            a=a-b
            b=f-a
        else:
            return i
        if(a and arr[offset+1]==key):
            return offset+1
    
        return -1
    
keyl=int(input("Enter the element to be found using linear"))
l=linearsearch(s,keyl)
print("The element is found at",l)
k=int(input("Enter the element to be found using sentineal search"))
se=sentinelsearch(s,k)
print("The element is found at",se)
s.sort()
keyf=int(input("Enter the element to be found using Binary search"))
binary=binarysearch(s,keyf)
print("the element is found at",binary)
keyfib=int(input("Enter the element to be found using fib search"))
fib=fibsearch(s,keyfib)
print("the element is found at",fib)
